name: test-and-release

on: 
  push:
    tags:
        - 'v*'

jobs:
  integration-test:
    runs-on: ubuntu-latest
    # container: golang:1.17-alpine
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: sqlm-int
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5 
    steps:
     - 
      name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
     -
      name: Checkout
      uses: actions/checkout@v2
     - 
      uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-uses: actions/checkout@v2
     - 
      name: Run Integration Tests
      shell: bash
      env:

        SQLM_SER_GIN_MODE: debug
        SQLM_SER_HTTP_PORT: 8081
        SQLM_SER_TEST_MODE: integration
        SQLM_SER_AUTH: http://0.0.0.0:8080/v1
        SQLM_SER_DB_HOST: localhost
        SQLM_SER_DB_PORT: 5432
        SQLM_SER_DB_NAME: sqlm-int
        SQLM_SER_DB_USER: postgres
        SQLM_SER_DB_PW: postgres
        SQLM_SER_GIT_URL: https://github.com/c-jamie/polar-sql.git
        SQLM_SER_GIT_USERNAME: cjamie
        SQLM_SER_GIT_TOKEN: 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

      run: |
        make test-server-ga
     - 
      name: Run Unit Tests
      shell: bash
      run: |
        make test-client