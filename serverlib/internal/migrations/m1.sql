-- +migrate Up
CREATE EXTENSION IF NOT EXISTS citext;

-- +migrate Up
CREATE TABLE project (
	id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  , name text null
  , created_at timestamp
  , updated_at timestamp
  , deleted_at timestamp
);

-- +migrate Down
alter table if exists snippit drop constraint if exists fk_project_id;
drop table project;

-- +migrate Up
CREATE TABLE snippit (
	id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  , name text null
  , project_id integer not NULL
  , created_at timestamp
  , updated_at timestamp
  , deleted_at timestamp
);

-- +migrate Down
alter table if exists git drop constraint if exists fk_snippit_id;
drop table snippit;

-- +migrate Up
CREATE TABLE git (
	id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  , snippit_id integer not NULL
  , location text not null
  , created_at timestamp
  , updated_at timestamp
  , deleted_at timestamp
);

-- +migrate Down
alter table if exists git drop constraint if exists fk_snippit_id;
drop table git;

-- +migrate Up
CREATE TABLE sql_migrations (
	id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  , file_id text not null
  , env varchar(20) not null
  , status varchar(25) null
  , source_table text not null
  , file text
  , file_order int 
  , migrated_at timestamp
  , migrated_at_null boolean
);

-- +migrate Down
alter table if exists sql_migrations_latest drop constraint if exists fk_sql_migrations_id;
drop table if exists sql_migrations;

-- +migrate Up
CREATE TABLE sql_migrations_latest (
	id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  , sql_migrations_id int
  , env varchar(20)
  , source_table varchar(255)
);

-- +migrate Down
drop table sql_migrations_latest;

-- +migrate Up
alter table snippit add constraint fk_project_id foreign key(project_id) references project(id) on delete cascade;

-- +migrate Up
alter table git add constraint fk_snippit_id foreign key(snippit_id) references snippit(id) on delete cascade;

-- +migrate Up
alter table sql_migrations_latest add constraint fk_sql_migrations_id foreign key(sql_migrations_id) references sql_migrations(id) on delete cascade;